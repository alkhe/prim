root
	= _ ns:nodes _ { return ns; }

boundednode
	= n:name _ ps:properties _ '{' _ ns:nodes _ '}' { return '<' + n + ps + '>' + ns + '</' + n + '>'; }
	/ n:name _ '{' _ ns:nodes _ '}' { return '<' + n + '>' + ns + '</' + n + '>'; }
	/ n:name _ ps:properties { return '<' + n + ps + '></' + n + '>'; }

node
	= n:name { return '<' + n + '></' + n + '>'; }

nodes
	= b:boundednode _ ns:nodes { return b + ns; }
	/ n:node __ ns:nodes { return n + ns; }
	/ boundednode
	/ node
	/ empty

properties
	= '(' _ as:attributes _ ')' { return ' ' + as; }
	/ '(' _ ')' { return ''; }

attributes
	= a:attribute __ as:attributes { return a + ' ' + as; }
	/ attribute

attribute
	= n:name _ '=' _ a:attvalue { return n + '=' + a; }
	/ name

attvalue
	= "'" v:$((!"'" char)*) "'" { return "'" + v + "'"; }
	/ '"' v:$((!'"' char)*) '"' { return '"' + v + '"'; }

string
	= $(char*)

char
	= [\u0009]
	/ [\u000A]
	/ [\u000D]
	/ [\u0020-\uD7FF]
	/ [\uE000-\uFFFD]

name
	= $(namestart namechar*)

namestart
	= ':'
	/ [A-Z]
	/ '_'
	/ [a-z]
	/ [\u00C0-\u00D6]
	/ [\u00D8-\u00F6]
	/ [\u00F8-\u02FF]
	/ [\u0370-\u037D]
	/ [\u037F-\u1FFF]
	/ [\u200C-\u200D]
	/ [\u2070-\u218F]
	/ [\u2C00-\u2FEF]
	/ [\u3001-\uD7FF]
	/ [\uF900-\uFDCF]
	/ [\uFDF0-\uFFFD]

namechar
	= namestart
	/ '-'
	/ '.'
	/ [0-9]
	/ [\u00B7]
	/ [\u0300-\u036F]
	/ [\u203F-\u2040]

empty
	= ''

line
	= '\n'

_

	= [ \t\r\n\f]*
__
	= [ \t\r\n\f]+
